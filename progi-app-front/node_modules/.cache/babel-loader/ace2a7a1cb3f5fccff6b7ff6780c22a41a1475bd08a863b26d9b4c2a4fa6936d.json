{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"User Table\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h1\", null, \"Constant test \" + _toDisplayString(_ctx.name), 1 /* TEXT */), _createElementVNode(\"h1\", null, \"Fuck you test \" + _toDisplayString($options.getName(\"Daniel\")), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.mounted())\n  }, \"Angry button\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"justSomePlaceHolder\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.email]]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.list, item => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: item.id\n    }, _toDisplayString(item.id) + \" | \" + _toDisplayString(item.vehicleType) + \" | \" + _toDisplayString(item.basicFee), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.columns, column => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: column\n    }, _toDisplayString(column), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.list, (row, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: _ctx.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(row.vehiclePrice), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.vehicleType), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.basicFee), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_Fragment","_toDisplayString","_ctx","name","$options","getName","onClick","_cache","$event","mounted","type","placeholder","email","_renderList","$data","list","item","key","id","vehicleType","basicFee","_hoisted_1","_hoisted_2","columns","column","row","index","vehiclePrice"],"sources":["C:\\Users\\dlopezc9\\source\\progi-app-front\\src\\components\\HomeTest.vue"],"sourcesContent":["<template>\r\n<h1>Constant test {{ name }}</h1>\r\n<h1>Fuck you test {{getName(\"Daniel\")}}</h1>\r\n<button v-on:click=\"mounted()\">Angry button</button>\r\n<input type=\"text\" placeholder=\"justSomePlaceHolder\" v-model=\"email\">\r\n<p v-for=\"item in list\" :key=\"item.id\">\r\n    {{item.id}} | {{item.vehicleType}} | {{item.basicFee}}\r\n</p>\r\n<div class=\"table-container\">\r\n    <h2>User Table</h2>\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th v-for=\"column in columns\" :key=\"column\">{{ column }}</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr v-for=\"(row, index) in list\" :key=\"id\">\r\n                <td>{{ row.vehiclePrice }}</td>\r\n                <td>{{ row.vehicleType }}</td>\r\n                <td>{{ row.basicFee }}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"\r\nexport default {\r\n    name: \"HomeTest\",\r\n    columns: [\"Vehicle Price ($)\", \"Vehicle Type\", \"Basic\", \"Special\", \"Association\", \"Storage\", \"Total($)\"],\r\n\r\n    data() {\r\n        return {\r\n            list: []\r\n        }\r\n    },\r\n    methods: {\r\n        getName(name) {\r\n            return name\r\n        },\r\n        clicked(text) {\r\n            alert(text)\r\n        },\r\n        send() {\r\n            console.warn(\"Click! \", this.email)\r\n        },\r\n        async mounted() {\r\n            let result = await axios.get(\"https://localhost:44314/Calculations\")\r\n            console.warn(result.data)\r\n            this.list = result.data\r\n        }\r\n\r\n    }\r\n\r\n}\r\n</script>\r\n"],"mappings":";;EAQKA,KAAK,EAAC;AAAiB;gCACxBC,mBAAA,CAAmB,YAAf,YAAU;;uBATlBC,mBAAA,CAAAC,SAAA,SACAF,mBAAA,CAAiC,YAA7B,gBAAc,GAAAG,gBAAA,CAAGC,IAAA,CAAAC,IAAI,kBACzBL,mBAAA,CAA4C,YAAxC,gBAAc,GAAAG,gBAAA,CAAEG,QAAA,CAAAC,OAAO,4BAC3BP,mBAAA,CAAoD;IAAvCQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,QAAA,CAAAK,OAAO;KAAI,cAAY,G,gBAC3CX,mBAAA,CAAqE;IAA9DY,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,qBAAqB;IAJpD,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAI8DN,IAAA,CAAAU,KAAK,GAAAJ,MAAA;iDAALN,IAAA,CAAAU,KAAK,E,sBACnEb,mBAAA,CAEIC,SAAA,QAPJa,WAAA,CAKkBC,KAAA,CAAAC,IAAI,EAAZC,IAAI;yBAAdjB,mBAAA,CAEI;MAFqBkB,GAAG,EAAED,IAAI,CAACE;wBAC7BF,IAAI,CAACE,EAAE,IAAE,KAAG,GAAAjB,gBAAA,CAAEe,IAAI,CAACG,WAAW,IAAE,KAAG,GAAAlB,gBAAA,CAAEe,IAAI,CAACI,QAAQ;kCAExDtB,mBAAA,CAgBM,OAhBNuB,UAgBM,GAfFC,UAAmB,EACnBxB,mBAAA,CAaQ,gBAZJA,mBAAA,CAIQ,gBAHJA,mBAAA,CAEK,c,kBADDC,mBAAA,CAA6DC,SAAA,QAb7Ea,WAAA,CAaqCX,IAAA,CAAAqB,OAAO,EAAjBC,MAAM;yBAAjBzB,mBAAA,CAA6D;MAA9BkB,GAAG,EAAEO;IAAM,GAAAvB,gBAAA,CAAKuB,MAAM;sCAG7D1B,mBAAA,CAMQ,iB,kBALJC,mBAAA,CAIKC,SAAA,QArBjBa,WAAA,CAiBuCC,KAAA,CAAAC,IAAI,EAjB3C,CAiBwBU,GAAG,EAAEC,KAAK;yBAAtB3B,mBAAA,CAIK;MAJ6BkB,GAAG,EAAEf,IAAA,CAAAgB;IAAE,IACrCpB,mBAAA,CAA+B,YAAAG,gBAAA,CAAxBwB,GAAG,CAACE,YAAY,kBACvB7B,mBAAA,CAA8B,YAAAG,gBAAA,CAAvBwB,GAAG,CAACN,WAAW,kBACtBrB,mBAAA,CAA2B,YAAAG,gBAAA,CAApBwB,GAAG,CAACL,QAAQ,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}